name: Build Hugo and Push to Target Repo

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.117.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: hugo --minify

      - name: Install rsync
        run: sudo apt-get install -y rsync

      - name: Push public folder contents to target repo root
        run: |
          git config --global user.name "jaysqvl"
          git config --global user.email "jaysqvl@gmail.com"

          # Clone the target repo to a temporary "target_repo" folder
          git clone https://x-access-token:${{ secrets.TARGET_REPO_TOKEN }}@github.com/jaysqvl/jaysqvl.github.io.git jaysqvl.github.io

          # Move the CNAME file to a temporary location
          mv jaysqvl.github.io/CNAME ../CNAME.temp

          # Remove all files in the target repo (excluding the .git directory)
          rm -rf jaysqvl.github.io/*

          # Move the CNAME file back
          mv ../CNAME.temp jaysqvl.github.io/CNAME

          # Copy only contents of 'public' folder from source repo to the root of target repo
          rsync -av public/ jaysqvl.github.io/
          
          # Commit and push to the target repo
          cd jaysqvl.github.io
          git status
          git add .
          git diff --cached --exit-code || git commit -m "Update from source repo"
          git status
          git push

      - name: Remove public directory
        if: always()
        run: rm -rf public